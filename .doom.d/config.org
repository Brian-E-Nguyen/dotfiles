#+title: Buraiyen's Doom Emacs Config
#+AUTHOR: Brian Nguyen (Buraiyen)
#+PROPERTY: header-args :tangle config.el
#+auto_tangle: t
#+STARTUP: showeverything

* TABLE OF CONTENTS :toc:
- [[#about-this-config--doom-emacs][ABOUT THIS CONFIG / DOOM EMACS]]
- [[#full-name--email][FULL NAME / EMAIL]]
- [[#looks][LOOKS]]
  - [[#font][Font]]
  - [[#theme][Theme]]
  - [[#window-transparency][Window Transparency]]
- [[#line-numbers][LINE NUMBERS]]

* ABOUT THIS CONFIG / DOOM EMACS
Doom Emacs is a configuration framework for GNU Emacs. It uses the "evil"
keybindings set to emulate Vim keybindings. Doom Emacs has various different
packages and customization for you to choose. Below is my custom configuration
of it, and feel free to use / modify whatever you like

[[https://github.com/doomemacs/][Link to Doom Emacs GitHub project]]

* FULL NAME / EMAIL

Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets. If you don't use any of these services, then
you don't have to fill out these fields

#+begin_src emacs-lisp
(setq user-full-name "Brian Nguyen"
      user-mail-address "brian.edison.nguyen@gmail.com")
#+end_src

* LOOKS
** Font
Doom exposes five (optional) variables for controlling fonts in Doom. Here
are the three important ones:

+ `doom-font'
+ `doom-variable-pitch-font'
+ `doom-big-font' -- used for `doom-big-font-mode'; use this for
  presentations or streaming.

They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
font string. You generally only need these two:

~(setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)~
      ~doom-variable-pitch-font (font-spec :family "sans" :size 13))~


#+begin_src emacs-lisp
(setq doom-font (font-spec :family "JetBrainsMonoMedium Nerd Font" :size 15))
#+end_src

** Theme
There are two ways to load a theme. Both assume the theme is installed and
available. You can either set `doom-theme' or manually load a theme with the
`load-theme' function. This is the default:

#+begin_src emacs-lisp
(setq doom-theme 'doom-one)
#+end_src

** Window Transparency
#+begin_src emacs-lisp
(set-frame-parameter (selected-frame) 'alpha '(90 90))
#+end_src

;; If you use `org' and don't want your org files in the default location below,
;; change `org-directory'. It must be set before org loads!
(setq org-directory "~/org/")

* LINE NUMBERS
This determines the style of line numbers in effect. If set to `nil', line
numbers are disabled. For relative line numbers, set this to `relative'.
~(setq display-line-numbers-type t)~
#+begin_src emacs-lisp
(setq display-line-numbers-type 'relative)
#+end_src


;; Here are some additional functions/macros that could help you configure Doom:
;;
;; - `load!' for loading external *.el files relative to this one
;; - `use-package!' for configuring packages
;; - `after!' for running code after a package has loaded
;; - `add-load-path!' for adding directories to the `load-path', relative to
;;   this file. Emacs searches the `load-path' when you load packages with
;;   `require' or `use-package'.
;; - `map!' for binding new keys
;;
;; To get information about any of these functions/macros, move the cursor over
;; the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
;; This will open documentation for it, including demos of how they are used.
;;
;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
;; they are implemented.


;; Beacon
(beacon-mode 1)
(setq beacon-blink-when-point-moves-vertically 1)
(setq beacon-blink-when-buffer-changes t)
(setq beacon-blink-when-window-scrolls t)

;; Org Journal
(setq org-journal-dir "~/Documents/journal/"
      org-journal-file-header "#+TITLE: %M %Y"
      org-journal-date-format "%A, %Y-%m-%d"
      org-journal-file-type 'monthly
      org-journal-file-format "%Y-%m.org")
(setq org-fold-core-style 'overlays)

;; Org Agenda
(after! org
  (setq org-agenda-files '("~/Documents/journal/agenda.org"))
)

(use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode)
  :config
  (setq org-auto-tangle-default t))


(require 'neotree)
(global-set-key [f6] 'org-bullets-mode)
(global-set-key [f7] 'org-export-dispatch)
(global-set-key [f8] 'neotree-toggle)
(global-set-key [f9] 'neotree-refresh)
(global-set-key (kbd "C-c c") '=calendar)
(define-key evil-normal-state-map (kbd "j") 'evil-next-visual-line)
(define-key evil-normal-state-map (kbd "k") 'evil-previous-visual-line)
(add-to-list 'default-frame-alist '(fullscreen . maximized))
